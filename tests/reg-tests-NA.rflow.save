<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rflow [
<!ENTITY lt "&#38;#60;">
<!ENTITY gt "&#62;">
<!ENTITY amp "&#38;#38;">
<!ENTITY apos "&#39;">
<!ENTITY quot "&#34;">
]>
<rflow>
 <graph version="0.3" width="894" height="742" locationtype="a" offsetx="0" offsety="0">
  <setting>
   <entry key="OUTPUT_DIRECTORY"></entry>
   <entry key="SAVE_CACHE">false</entry>
   <entry key="FONT_SCREEN">monospace</entry>
   <entry key="TEXT_ENCODING">UTF-8</entry>
   <entry key="LOAD_CACHE">false</entry>
   <entry key="IGNORE_ERROR">false</entry>
   <entry key="SAVE_WORKSPACE"></entry>
   <entry key="OUTPUT_REPORT">true</entry>
   <entry key="RUN_TYPE">2</entry>
   <entry key="OUTPUT_ITEMS">script</entry>
   <entry key="USE_GRID">true</entry>
   <entry key="REPORT_TYPES">pdf,html</entry>
   <entry key="FOLDER">empty</entry>
   <entry key="GRID_DISTANCE2">10</entry>
   <entry key="IMAGE_SIZE">480,480</entry>
   <entry key="FONT_OTHER">sans-serif</entry>
  </setting>
<node id="1" x="440" y="80">
 <command>str &lt;- function(object, ...) UseMethod(&quot;str&quot;)</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FunctionNodeModel">
  <entry key="function">str</entry>
  <entry key="args">(object , ... )</entry>
  <subflow>
   <graph version="0.3" width="688" height="700" locationtype="a" offsetx="0" offsety="0">
<node id="2" x="440" y="80">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">in</entry>
 </option>
</node>
<node id="3" x="440" y="160">
 <command>UseMethod(&quot;str&quot;)</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="4" x="440" y="240">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">out</entry>
 </option>
</node>
<edge from="2" to="3"/>
<edge from="3" to="4"/>
   </graph>
  </subflow>
 </option>
</node>
<node id="5" x="440" y="160">
 <command>a &lt;- 1:10</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="6" x="440" y="240">
 <command>if (length(a)) {
    b &lt;- sum(a)
    if (b &gt; 100 &amp;&amp; b &lt; 10000) 
        c &lt;- sqrt(b)
    else if (b &lt; 500) 
        c &lt;- log(b)
}</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.IfNodeModel">
  <entry key="condition">length(a)</entry>
<subflow>
 <graph version="0.3" width="688" height="700" locationtype="a" offsetx="0" offsety="0">
<node id="7" x="440" y="80">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">in</entry>
 </option>
</node>
<node id="8" x="440" y="160">
 <command>b &lt;- sum(a)</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="9" x="440" y="240">
 <command>if (b &gt; 100 &amp;&amp; b &lt; 10000) c &lt;- sqrt(b) else if (b &lt; 500) c &lt;- log(b)</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.IfNodeModel">
  <entry key="condition">b &gt; 100 &amp;&amp; b &lt; 10000</entry>
<subflow>
 <graph version="0.3" width="688" height="700" locationtype="a" offsetx="0" offsety="0">
<node id="10" x="440" y="80">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">in</entry>
 </option>
</node>
<node id="11" x="440" y="160">
 <command>c &lt;- sqrt(b)</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="12" x="440" y="240">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">out</entry>
 </option>
</node>
<edge from="10" to="11"/>
<edge from="11" to="12"/>
 </graph>
</subflow>
<subflow>
 <graph version="0.3" width="688" height="700" locationtype="a" offsetx="0" offsety="0">
<node id="13" x="440" y="80">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">in</entry>
 </option>
</node>
<node id="14" x="440" y="160">
 <command>if (b &lt; 500) c &lt;- log(b)</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.IfNodeModel">
  <entry key="condition">b &lt; 500</entry>
<subflow>
 <graph version="0.3" width="688" height="700" locationtype="a" offsetx="0" offsety="0">
<node id="15" x="440" y="80">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">in</entry>
 </option>
</node>
<node id="16" x="440" y="160">
 <command>c &lt;- log(b)</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="17" x="440" y="240">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">out</entry>
 </option>
</node>
<edge from="15" to="16"/>
<edge from="16" to="17"/>
 </graph>
</subflow>
<subflow>
 <graph version="0.3" width="688" height="700" locationtype="a" offsetx="0" offsety="0">
<node id="18" x="440" y="80">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">in</entry>
 </option>
</node>
<node id="19" x="440" y="160">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">out</entry>
 </option>
</node>
 </graph>
</subflow>
 </option>
</node>
<node id="20" x="440" y="240">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">out</entry>
 </option>
</node>
<edge from="13" to="14"/>
<edge from="14" to="20"/>
 </graph>
</subflow>
 </option>
</node>
<node id="21" x="440" y="320">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">out</entry>
 </option>
</node>
<edge from="7" to="8"/>
<edge from="8" to="9"/>
<edge from="9" to="21"/>
 </graph>
</subflow>
<subflow>
 <graph version="0.3" width="688" height="700" locationtype="a" offsetx="0" offsety="0">
<node id="22" x="440" y="80">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">in</entry>
 </option>
</node>
<node id="23" x="440" y="160">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">out</entry>
 </option>
</node>
 </graph>
</subflow>
 </option>
</node>
<node id="24" x="440" y="320">
 <command>`%w/o%` &lt;- function(x, y) x[is.na(match(x, y))]</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FunctionNodeModel">
  <entry key="function">`%w/o%`</entry>
  <entry key="args">(x , y )</entry>
  <subflow>
   <graph version="0.3" width="688" height="700" locationtype="a" offsetx="0" offsety="0">
<node id="25" x="440" y="80">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">in</entry>
 </option>
</node>
<node id="26" x="440" y="160">
 <command>x[is.na(match(x, y))]</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="27" x="440" y="240">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">out</entry>
 </option>
</node>
<edge from="25" to="26"/>
<edge from="26" to="27"/>
   </graph>
  </subflow>
 </option>
</node>
<node id="28" x="440" y="400">
 <command>for (i in seq_len(10)) {
    cat(i, &quot;\n&quot;, sep = &quot;&quot;)
    e &lt;- if (i == 3L) {
        cat(sqrt(i), &quot;\n&quot;, sep = &quot;&quot;)
    }
    cat(i^2, &quot;\n&quot;, sep = &quot;&quot;)
}</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.LoopNodeModel">
  <entry key="loop">for</entry>
  <entry key="condition">i in seq_len(10)</entry>
  <subflow>
   <graph version="0.3" width="688" height="700" locationtype="a" offsetx="0" offsety="0">
<node id="29" x="440" y="80">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">in</entry>
 </option>
</node>
<node id="30" x="440" y="160">
 <command>cat(i, &quot;\n&quot;, sep = &quot;&quot;)</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="31" x="440" y="240">
 <command>e &lt;- if (i == 3L) {
    cat(sqrt(i), &quot;\n&quot;, sep = &quot;&quot;)
}</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="32" x="440" y="320">
 <command>cat(i^2, &quot;\n&quot;, sep = &quot;&quot;)</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="33" x="440" y="400">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">out</entry>
 </option>
</node>
<edge from="29" to="30"/>
<edge from="30" to="31"/>
<edge from="31" to="32"/>
<edge from="32" to="33"/>
   </graph>
  </subflow>
 </option>
</node>
<node id="34" x="440" y="480">
 <command>a &lt;- 1</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="35" x="440" y="560">
 <command>while (a &lt; 10) {
    cat(&quot;Hello\n&quot;)
    a &lt;- a + 1
}</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.LoopNodeModel">
  <entry key="loop">while</entry>
  <entry key="condition">a &lt; 10</entry>
  <subflow>
   <graph version="0.3" width="688" height="700" locationtype="a" offsetx="0" offsety="0">
<node id="36" x="440" y="80">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">in</entry>
 </option>
</node>
<node id="37" x="440" y="160">
 <command>cat(&quot;Hello\n&quot;)</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="38" x="440" y="240">
 <command>a &lt;- a + 1</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="39" x="440" y="320">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">out</entry>
 </option>
</node>
<edge from="36" to="37"/>
<edge from="37" to="38"/>
<edge from="38" to="39"/>
   </graph>
  </subflow>
 </option>
</node>
<node id="40" x="440" y="640">
 <command>repeat {
    p &lt;- 1
    i &lt;- 1
    error = -0.2 * log((1/runif(60, 0, 1)) - 1)
    z = (p &lt; 0.5 + error)
    z = replace(z, z == TRUE, 1)
    if (sum(z[(3 * i - 2):(3 * i)]) != 0) {
        break
    }
}</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.LoopNodeModel">
  <entry key="loop">repeat</entry>
  <subflow>
   <graph version="0.3" width="688" height="700" locationtype="a" offsetx="0" offsety="0">
<node id="41" x="440" y="80">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">in</entry>
 </option>
</node>
<node id="42" x="440" y="160">
 <command>p &lt;- 1</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="43" x="440" y="240">
 <command>i &lt;- 1</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="44" x="440" y="320">
 <command>error = -0.2 * log((1/runif(60, 0, 1)) - 1)</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="45" x="440" y="400">
 <command>z = (p &lt; 0.5 + error)</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="46" x="440" y="480">
 <command>z = replace(z, z == TRUE, 1)</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="47" x="440" y="560">
 <command>if (sum(z[(3 * i - 2):(3 * i)]) != 0) {
    break
}</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.IfNodeModel">
  <entry key="condition">sum(z[(3 * i - 2):(3 * i)]) != 0</entry>
<subflow>
 <graph version="0.3" width="688" height="700" locationtype="a" offsetx="0" offsety="0">
<node id="48" x="440" y="80">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">in</entry>
 </option>
</node>
<node id="49" x="440" y="160">
 <command>break</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="50" x="440" y="240">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">out</entry>
 </option>
</node>
<edge from="48" to="49"/>
<edge from="49" to="50"/>
 </graph>
</subflow>
<subflow>
 <graph version="0.3" width="688" height="700" locationtype="a" offsetx="0" offsety="0">
<node id="51" x="440" y="80">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">in</entry>
 </option>
</node>
<node id="52" x="440" y="160">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">out</entry>
 </option>
</node>
 </graph>
</subflow>
 </option>
</node>
<node id="53" x="440" y="640">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">out</entry>
 </option>
</node>
<edge from="41" to="42"/>
<edge from="42" to="43"/>
<edge from="43" to="44"/>
<edge from="44" to="45"/>
<edge from="45" to="46"/>
<edge from="46" to="47"/>
<edge from="47" to="53"/>
   </graph>
  </subflow>
 </option>
</node>
<node id="54" x="440" y="720">
 <command>p &lt;- 1</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="55" x="440" y="800">
 <command>error = -0.2 * log((1/runif(60, 0, 1)) - 1)</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="56" x="440" y="880">
 <command>z = (p &lt; 0.5 + error)</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="57" x="440" y="960">
 <command>{
    {
        y &lt;- sqrt(3)
    }
    x &lt;- 1:100
    mean(x)
    sd(x)
}</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.SubflowNodeModel">
  <subflow>
   <graph version="0.3" width="688" height="700" locationtype="a" offsetx="100" offsety="50">
<node id="58" x="440" y="80">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">in</entry>
 </option>
</node>
<node id="59" x="440" y="160">
 <command>{
    y &lt;- sqrt(3)
}</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.SubflowNodeModel">
  <subflow>
   <graph version="0.3" width="688" height="700" locationtype="a" offsetx="100" offsety="50">
<node id="60" x="440" y="80">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">in</entry>
 </option>
</node>
<node id="61" x="440" y="160">
 <command>y &lt;- sqrt(3)</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="62" x="440" y="240">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">out</entry>
 </option>
</node>
<edge from="60" to="61"/>
<edge from="61" to="62"/>
   </graph>
  </subflow>
 </option>
</node>
<node id="63" x="440" y="240">
 <command>x &lt;- 1:100</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="64" x="440" y="320">
 <command>mean(x)</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="65" x="440" y="400">
 <command>sd(x)</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="66" x="440" y="480">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">out</entry>
 </option>
</node>
<edge from="58" to="59"/>
<edge from="59" to="63"/>
<edge from="63" to="64"/>
<edge from="64" to="65"/>
<edge from="65" to="66"/>
   </graph>
  </subflow>
 </option>
</node>
<node id="67" x="440" y="1040">
 <command>get_formals_from_method_definition &lt;- function(m) {
    methods::unRematchDefinition(m)
}</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FunctionNodeModel">
  <entry key="function">get_formals_from_method_definition</entry>
  <entry key="args">(m )</entry>
  <subflow>
   <graph version="0.3" width="688" height="700" locationtype="a" offsetx="0" offsety="0">
<node id="68" x="440" y="80">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">in</entry>
 </option>
</node>
<node id="69" x="440" y="160">
 <command>methods::unRematchDefinition(m)</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="70" x="440" y="240">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">out</entry>
 </option>
</node>
<edge from="68" to="69"/>
<edge from="69" to="70"/>
   </graph>
  </subflow>
 </option>
</node>
<node id="71" x="440" y="1120">
 <command>testfun &lt;- function(x = 1L) {
    x &lt;- x + 1L
    if (x &gt; 3L) 
        return(&quot;x is greater than 3&quot;)
    &quot;x is not greater than 3&quot;
}</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FunctionNodeModel">
  <entry key="function">testfun</entry>
  <entry key="args">(x = 1L)</entry>
  <subflow>
   <graph version="0.3" width="688" height="700" locationtype="a" offsetx="0" offsety="0">
<node id="72" x="440" y="80">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">in</entry>
 </option>
</node>
<node id="73" x="440" y="160">
 <command>x &lt;- x + 1L</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="74" x="440" y="240">
 <command>if (x &gt; 3L) return(&quot;x is greater than 3&quot;)</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.IfNodeModel">
  <entry key="condition">x &gt; 3L</entry>
<subflow>
 <graph version="0.3" width="688" height="700" locationtype="a" offsetx="0" offsety="0">
<node id="75" x="440" y="80">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">in</entry>
 </option>
</node>
<node id="76" x="440" y="160">
 <command>return(&quot;x is greater than 3&quot;)</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="77" x="440" y="240">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">out</entry>
 </option>
</node>
<edge from="75" to="76"/>
<edge from="76" to="77"/>
 </graph>
</subflow>
<subflow>
 <graph version="0.3" width="688" height="700" locationtype="a" offsetx="0" offsety="0">
<node id="78" x="440" y="80">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">in</entry>
 </option>
</node>
<node id="79" x="440" y="160">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">out</entry>
 </option>
</node>
 </graph>
</subflow>
 </option>
</node>
<node id="80" x="440" y="320">
 <command>&quot;x is not greater than 3&quot;</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="81" x="440" y="400">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">out</entry>
 </option>
</node>
<edge from="72" to="73"/>
<edge from="73" to="74"/>
<edge from="74" to="80"/>
<edge from="80" to="81"/>
   </graph>
  </subflow>
 </option>
</node>
<node id="82" x="440" y="1200">
 <command>if (require(&quot;R2rflow&quot;)) {
    R2rflow(file = &quot;reg-tests.R&quot;, max.level = 0L, output = &quot;reg-tests-0.rflow&quot;)
    R2rflow(file = &quot;reg-tests.R&quot;, max.level = 1L, output = &quot;reg-tests-1.rflow&quot;)
    R2rflow(file = &quot;reg-tests.R&quot;, max.level = NA, output = &quot;reg-tests-NA.rflow&quot;)
    stopifnot(identical(readLines(&quot;reg-tests-0.rflow&quot;), readLines(&quot;reg-tests-0.rflow.save&quot;)))
    stopifnot(identical(readLines(&quot;reg-tests-1.rflow&quot;), readLines(&quot;reg-tests-1.rflow&quot;)))
    stopifnot(identical(readLines(&quot;reg-tests-NA.rflow&quot;), readLines(&quot;reg-tests-NA.rflow&quot;)))
}</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.IfNodeModel">
  <entry key="condition">require(&quot;R2rflow&quot;)</entry>
<subflow>
 <graph version="0.3" width="688" height="700" locationtype="a" offsetx="0" offsety="0">
<node id="83" x="440" y="80">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">in</entry>
 </option>
</node>
<node id="84" x="440" y="160">
 <command>R2rflow(file = &quot;reg-tests.R&quot;, max.level = 0L, output = &quot;reg-tests-0.rflow&quot;)</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="85" x="440" y="240">
 <command>R2rflow(file = &quot;reg-tests.R&quot;, max.level = 1L, output = &quot;reg-tests-1.rflow&quot;)</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="86" x="440" y="320">
 <command>R2rflow(file = &quot;reg-tests.R&quot;, max.level = NA, output = &quot;reg-tests-NA.rflow&quot;)</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="87" x="440" y="400">
 <command>stopifnot(identical(readLines(&quot;reg-tests-0.rflow&quot;), readLines(&quot;reg-tests-0.rflow.save&quot;)))</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="88" x="440" y="480">
 <command>stopifnot(identical(readLines(&quot;reg-tests-1.rflow&quot;), readLines(&quot;reg-tests-1.rflow&quot;)))</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="89" x="440" y="560">
 <command>stopifnot(identical(readLines(&quot;reg-tests-NA.rflow&quot;), readLines(&quot;reg-tests-NA.rflow&quot;)))</command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.FreeNodeModel"/>
</node>
<node id="90" x="440" y="640">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">out</entry>
 </option>
</node>
<edge from="83" to="84"/>
<edge from="84" to="85"/>
<edge from="85" to="86"/>
<edge from="86" to="87"/>
<edge from="87" to="88"/>
<edge from="88" to="89"/>
<edge from="89" to="90"/>
 </graph>
</subflow>
<subflow>
 <graph version="0.3" width="688" height="700" locationtype="a" offsetx="0" offsety="0">
<node id="91" x="440" y="80">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">in</entry>
 </option>
</node>
<node id="92" x="440" y="160">
 <command></command>
 <property/>
 <option type="com.ef_prime.rflow.node.base.TunnelNodeModel">
  <entry key="io">out</entry>
 </option>
</node>
 </graph>
</subflow>
 </option>
</node>
<edge from="1" to="5"/>
<edge from="5" to="6"/>
<edge from="6" to="24"/>
<edge from="24" to="28"/>
<edge from="28" to="34"/>
<edge from="34" to="35"/>
<edge from="35" to="40"/>
<edge from="40" to="54"/>
<edge from="54" to="55"/>
<edge from="55" to="56"/>
<edge from="56" to="57"/>
<edge from="57" to="67"/>
<edge from="67" to="71"/>
<edge from="71" to="82"/>
 </graph>
 <task>
  <taskgroup>
   <taskproperty>
    <entry key="title">Task</entry>
   </taskproperty>
  </taskgroup>
 </task>
</rflow>
